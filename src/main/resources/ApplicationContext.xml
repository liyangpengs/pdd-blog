<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
       <!-- 导入配置文件 -->
       <context:property-placeholder location="classpath:configuration.properties" ignore-unresolvable="true"/>
       <!-- 配置包扫描 -->
       <context:component-scan base-package="com.pdd" >
       		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
       </context:component-scan>
       <!-- 使用注解配置 -->
       <context:annotation-config/>
       <!-- 配置数据源 -->
       <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
       		<property name="driverClassName" value="${jdbc.driver}"></property>
       		<property name="url" value="${jdbc.url}"></property>
       		<property name="username" value="${jdbc.user}"></property>
       		<property name="password" value="${jdbc.pwd}"></property>
       		 <!-- 初始化连接大小 -->
	        <property name="initialSize" value="${jdbc.initialSize}"></property>
	        <!-- 连接池最大数量 -->
	        <property name="maxActive" value="${jdbc.maxActive}"></property>
	        <!-- 连接池最大空闲 -->
	        <property name="maxIdle" value="${jdbc.maxIdle}"></property>
	        <!-- 连接池最小空闲 -->
	        <property name="minIdle" value="${jdbc.minIdle}"></property>
	        <!-- 获取连接最大等待时间 -->
	        <property name="maxWait" value="${jdbc.maxWait}"></property>
       </bean>
       <!-- SqlSession -->
       <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
       		<property name="dataSource" ref="dataSource"></property>
       	    <property name="mapperLocations" value="classpath:com/pdd/dbConf/*.xml"></property>
       		<property name="configLocation" value="classpath:Mybatis-conf.xml"></property>
       </bean>
       <!-- 自动扫描 -->
       <bean id="MapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
       		<property name="basePackage" value="com.pdd.dao"></property>
       		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
       </bean>
       <!-- 事务管理器 -->
       <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
       		<property name="dataSource" ref="dataSource"></property>
       </bean>
       <!-- 事物配置 -->
       <tx:advice id="tx" transaction-manager="transactionManager">
       	<tx:attributes>
       		<tx:method name="get*" read-only="true"/>
       		<tx:method name="*" isolation="READ_COMMITTED"/>
       	</tx:attributes>
       </tx:advice>
       <!-- Spring配置事物切点 -->
       <aop:config>
       	<aop:pointcut expression="execution( * com.pdd.Service.*.*(..))" id="cut"/>
       	<aop:advisor advice-ref="tx" pointcut-ref="cut"/>
       </aop:config>
       	<!-- jedisPoolConfig -->
       <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
	       	<!-- 最大空闲数 -->
	        <property name="maxIdle" value="${redis.maxIdle}" />
	        <!-- 最大空连接数 -->
	        <property name="maxTotal" value="${redis.maxTotal}" />
	        <!-- 最大等待时间 -->
	        <property name="maxWaitMillis" value="${redis.maxWaitMillis}" />
	        <!-- 连接超时时是否阻塞，false时报异常,ture阻塞直到超时, 默认true -->
	         <property name="blockWhenExhausted" value="${redis.blockWhenExhausted}" /> 
	        <!-- 返回连接时，检测连接是否成功 -->
	        <property name="testOnBorrow" value="${redis.testOnBorrow}" />
       </bean>
       <!-- redis的连接池pool，不是必选项：timeout/password  -->  
      <bean id = "jedisPool" class="redis.clients.jedis.JedisPool">  
          <constructor-arg index="0" ref="poolConfig"/>  
          <constructor-arg index="1" value="${redis.host}" type="java.lang.String"/>  
          <constructor-arg index="2" value="${redis.port}" type="int"/>  
          <constructor-arg index="3" value="${redis.timeout}" type="int"/>  
      </bean>
</beans>